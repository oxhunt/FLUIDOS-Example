apiVersion: v1
kind: ServiceAccount
metadata:
  name: fl-orchestrator-sa
  namespace: {{ .Values.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fl-orchestrator-clusterrole
  namespace: {{ .Values.namespace }}
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["list", "watch", patch]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", patch]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fl-orchestrator-clusterrolebinding
subjects:
- kind: ServiceAccount
  name: fl-orchestrator-sa
  namespace: {{ .Values.namespace }}
roleRef:
  kind: ClusterRole
  name: fl-orchestrator-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ .Values.namespace }}
  name: fl-orchestrator-role
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: fl-orchestrator-rolebinding
  namespace: {{ .Values.namespace }}
subjects:
- kind: ServiceAccount
  name: fl-orchestrator-sa
  namespace: {{ .Values.namespace }}
roleRef:
  kind: Role
  name: fl-orchestrator-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fl-orchestrator
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: fl-orchestrator
  template:
    metadata:
      labels:
        app: fl-orchestrator
    spec:
      # we set the pod to host network to monitor for changes in the host ip address
      #hostNetwork: true
      serviceAccountName: fl-orchestrator-sa
      containers:
      - name: fl-orchestrator
        image: oxhunt/fl-orchestrator:latest
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        env:
        #- name: PROMETHEUS_SERVICE
        #  value: "192.168.11.69:30090"
        - name: PROMETHEUS_SERVICE
          value: "{{ .Values.prometheus_service }}"
        - name: NODE_NAME
          value: "{{ .Values.node_name }}"
        - name: TIME_RANGE_SAMPLES
          value: "{{ .Values.time_range_samples }}"
